<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ucommerce.Api</name>
    </assembly>
    <members>
        <member name="T:Ucommerce.Api.CatalogContext">
            <summary>
            BOLT implementation of <see cref="T:Ucommerce.Api.ICatalogContext" />
            </summary>
            <remarks>
            This implementation assumes that the current <see cref="T:System.Web.HttpRequest"/> contains the keys
            of the current catalog (Request["Catalog"]), product SKU (Request["ProductId"]), and category (Request["Category"]).
            </remarks>
        </member>
        <member name="P:Ucommerce.Api.CatalogContext.CurrentPriceGroup">
            <summary>
            Uses the price group configured on the current catalog by default.
            </summary>
            <remarks>
            Persists overridden <see cref="T:Ucommerce.Search.Models.PriceGroup"/> and checks whether it's allowed
            for current store upon getting the choice.
            </remarks>
            <value>
            The currenct price group.
            </value>
        </member>
        <member name="M:Ucommerce.Api.CatalogLibrary.CalculatePrices(System.Collections.Generic.IList{System.Guid},System.Collections.Generic.IList{System.Guid})">
            <summary>
            Calculates prices for the products.
            </summary>
        </member>
        <member name="M:Ucommerce.Api.CatalogLibrary.GetProducts(System.Collections.Generic.IList{System.Guid},Ucommerce.Search.Facets.FacetDictionary,System.UInt32,System.UInt32)">
            <summary>
            Queries products based on categories and search parameters.
            </summary>
            <param name="categoryIds">Categories that provides the products</param>
            <param name="facets">List of facet filters.</param>
            <returns>Facets with values and hits corresponding to the search parameters.</returns>
        </member>
        <member name="M:Ucommerce.Api.CatalogLibrary.GetProducts(System.Guid,Ucommerce.Search.Facets.FacetDictionary,System.UInt32,System.UInt32)">
            <summary>
            Queries products based on a category and search parameters.
            </summary>
            <param name="categoryId">Category that provides the products</param>
            <param name="facets">List of facet filters.</param>
            <param name="skip"></param>
            <param name="take"></param>
            <returns>Facets with values and hits corresponding to the search parameters.</returns>
        </member>
        <member name="M:Ucommerce.Api.IMarketingLibrary.GetTargetedCampaignItems(Ucommerce.EntitiesV2.Product)">
            <summary>
            Gets all <see cref="T:Ucommerce.EntitiesV2.CampaignItem">campaign items</see>, which <see cref="T:Ucommerce.Marketing.Targets.ITarget">targets</see> are satisfied, for the given <see cref="T:Ucommerce.EntitiesV2.Product"/>.
            </summary>
        </member>
        <member name="M:Ucommerce.Api.IMarketingLibrary.GetTargetedCampaignItemsForIndividualProducts(System.Collections.Generic.IEnumerable{Ucommerce.EntitiesV2.Product})">
            <summary>
            Gets lists of all <see cref="T:Ucommerce.EntitiesV2.CampaignItem">campaign items</see>, which have <see cref="T:Ucommerce.Marketing.Targets.ITarget">targets</see> satisfied for each of the <see cref="T:Ucommerce.EntitiesV2.Product">products</see> given.
            </summary>
            <remarks>
            This method is the multi-product version of the <see cref="M:Ucommerce.Api.MarketingLibrary.GetTargetedCampaignItems(Ucommerce.EntitiesV2.Product)"/> method.
            </remarks>
        </member>
        <member name="M:Ucommerce.Api.MarketingLibrary.GetTargetedCampaignItems(Ucommerce.EntitiesV2.Product)">
            <summary>
            Gets all <see cref="T:Ucommerce.EntitiesV2.CampaignItem">campaign items</see>, which <see cref="T:Ucommerce.Marketing.Targets.ITarget">targets</see> are satisfied, for the given <see cref="T:Ucommerce.EntitiesV2.Product"/>.
            </summary>
        </member>
        <member name="M:Ucommerce.Api.MarketingLibrary.GetTargetedCampaignItemsForIndividualProducts(System.Collections.Generic.IEnumerable{Ucommerce.EntitiesV2.Product})">
            <summary>
            Gets lists of all <see cref="T:Ucommerce.EntitiesV2.CampaignItem">campaign items</see>, which have <see cref="T:Ucommerce.Marketing.Targets.ITarget">targets</see> satisfied for each of the <see cref="T:Ucommerce.EntitiesV2.Product">products</see> given.
            </summary>
            <remarks>
            This method is the multi-product version of the <see cref="M:Ucommerce.Api.MarketingLibrary.GetTargetedCampaignItems(Ucommerce.EntitiesV2.Product)"/> method.
            </remarks>
        </member>
        <member name="T:Ucommerce.Api.Marketing.TargetingContextPopulators.PriceGroupPopulator">
            <summary>
            Class responsible for populating the targeting context with the current price group.
            </summary>
        </member>
        <member name="M:Ucommerce.Api.Marketing.TargetingContextPopulators.PriceGroupPopulator.#ctor(Ucommerce.Api.ICatalogContext)">
            <summary>
            Constructs a new <see cref="T:Ucommerce.Api.Marketing.TargetingContextPopulators.PriceGroupPopulator"/>.
            </summary>
            <param name="catalogContext"></param>
        </member>
        <member name="M:Ucommerce.Api.Marketing.TargetingContextPopulators.PriceGroupPopulator.Populate(Ucommerce.Marketing.TargetingContext)">
            <summary>
            Populate the targeting context with the current price group.
            </summary>
        </member>
        <member name="T:Ucommerce.Api.Marketing.TargetingContextPopulators.ProductCatalogPopulator">
            <summary>
            Populates <see cref="T:Ucommerce.Marketing.TargetingContext"/> with current catalog as specified in <see cref="T:Ucommerce.Api.ICatalogContext"/>.
            </summary>
        </member>
        <member name="T:Ucommerce.Api.Marketing.TargetingContextPopulators.ProductPopulator">
            <summary>
            Populates the <see cref="T:Ucommerce.Marketing.TargetingContext">targeting context</see> with <see cref="T:Ucommerce.EntitiesV2.Product">products</see>.
            </summary>
            <remarks>
            The populate method searches for products in the current <see cref="T:Ucommerce.EntitiesV2.Category">category</see> and current <see cref="T:Ucommerce.EntitiesV2.Product">product</see>.
            </remarks>
        </member>
        <member name="T:Ucommerce.Api.IOrderContext">
            <summary>
            Provides context for the transaction system.
            </summary>
        </member>
        <member name="P:Ucommerce.Api.IOrderContext.HasBasket">
            <summary>
            Gets a value indicating whether or not the current
            user has a basket.
            </summary>
        </member>
        <member name="M:Ucommerce.Api.IOrderContext.GetBasket">
            <summary>
            Gets the user's basket. If the user does not have a basket
            one will be created.
            </summary>
            <returns>The basket.</returns>
        </member>
        <member name="M:Ucommerce.Api.IOrderContext.GetBasket(System.Boolean)">
            <summary>
            Gets the user's basket. If the user does not have a basket
            one will be created.
            </summary>
            <param name="create">Indicates whether a new basket should be created if one doesn't exist</param>
            <returns></returns>
        </member>
        <member name="M:Ucommerce.Api.IOrderContext.GetBasket(System.Guid)">
            <summary>
            Gets a specific basket by its id
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ucommerce.Api.IOrderContext.ClearBasketInformation">
            <summary>
            Delete persistent basket
            </summary>
        </member>
        <member name="M:Ucommerce.Api.IOrderContext.CreateBasket(Ucommerce.EntitiesV2.Currency)">
            <summary>
            Crates a new <see cref="T:Ucommerce.EntitiesV2.Basket"/> for the <see cref="T:Ucommerce.EntitiesV2.Customer"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ucommerce.Api.ITransactionLibrary.GetPaymentMethods(System.String)">
            <summary>
            Gets the payment methods.
            </summary>
            <param name="shippingAddressName">Name of the shipping address.</param>
            <returns></returns>
        </member>
        <member name="M:Ucommerce.Api.ITransactionLibrary.GetPaymentMethods(Ucommerce.EntitiesV2.Country)">
            <summary>
            Gets the payment methods.
            </summary>
            <param name="country">The country.</param>
            <returns></returns>
        </member>
        <member name="M:Ucommerce.Api.ITransactionLibrary.GetPaymentMethods(Ucommerce.Search.Models.ProductCatalogGroup,Ucommerce.EntitiesV2.Country)">
            <summary>
            Gets the payment methods.
            </summary>
            <param name="productCatalogGroup">The product catalog group</param>
            <param name="country">The country.</param>
            <returns></returns>
        </member>
        <member name="M:Ucommerce.Api.ITransactionLibrary.CreatePayment(System.Int32,System.Decimal,System.Boolean,System.Boolean)">
            <summary>
            Creates the payment.
            </summary>
            <param name="paymentMethodId">The payment method id.</param>
            <param name="amount">The amount.</param>
            <param name="requestPayment">if set to <c>true</c> [request payment].</param>
            <param name="overwriteExisting">if set to <c>true</c> [overwrite existing].</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Ucommerce.Api.ITransactionLibrary.RenderPaymentForm(System.String)">
            <summary>
            Renders the payment form.
            </summary>
            <param name="paymentIdentifier">The payment identifier.</param>
            <returns></returns>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
        <member name="M:Ucommerce.Api.ITransactionLibrary.RequestPayments">
            <summary>
            Requests the payments.
            </summary>
        </member>
        <member name="M:Ucommerce.Api.ITransactionLibrary.RequestPayment(System.Int32)">
            <summary>
            Requests the payment.
            </summary>
            <param name="paymentId">The payment id.</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="T:Ucommerce.Api.TransactionLibrary">
            <summary>
            Implementation of the Transaction API.
            </summary>
        </member>
        <member name="M:Ucommerce.Api.TransactionLibrary.AddToBasket(System.Int32,System.Guid,System.Nullable{System.Guid},System.Nullable{System.Decimal},System.Nullable{System.Guid},System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Adds to basket.
            </summary>
            <param name="quantity">The quantity.</param>
            <param name="productId">The guid of the product.</param>
            <param name="variantId">The guid of the optional variant</param>
            <param name="unitPrice"></param>
            <param name="priceGroup">PriceGroup for VAT rate</param>
            <param name="addToExistingLine">if set to <c>true</c> [add to existing line].</param>
            <param name="executeBasketPipeline">if set to <c>true</c> [execute basket pipeline].</param>
            <param name="properties">Properties to include in PipelineArgs</param>
        </member>
        <member name="M:Ucommerce.Api.TransactionLibrary.GetPaymentMethods(System.String)">
            <summary>
            Gets the payment methods.
            </summary>
            <param name="shippingAddressName">Name of the shipping address.</param>
            <returns></returns>
        </member>
        <member name="M:Ucommerce.Api.TransactionLibrary.GetPaymentMethods(Ucommerce.EntitiesV2.Country)">
            <summary>
            Gets the payment methods.
            </summary>
            <param name="country">The country.</param>
            <returns></returns>
        </member>
        <member name="M:Ucommerce.Api.TransactionLibrary.GetPaymentMethods(Ucommerce.Search.Models.ProductCatalogGroup,Ucommerce.EntitiesV2.Country)">
            <summary>
            Gets the payment methods.
            </summary>
            <param name="productCatalogGroup">The product catalog group</param>
            <param name="country">The country.</param>
            <returns></returns>
        </member>
        <member name="M:Ucommerce.Api.TransactionLibrary.CreatePayment(System.Int32,System.Decimal,System.Boolean,System.Boolean)">
            <summary>
            Creates the payment.
            </summary>
            <param name="paymentMethodId">The payment method id.</param>
            <param name="amount">The amount.</param>
            <param name="requestPayment">if set to <c>true</c> [request payment].</param>
            <param name="overwriteExisting">if set to <c>true</c> [overwrite existing].</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Ucommerce.Api.TransactionLibrary.RenderPaymentForm(System.String)">
            <summary>
            Renders the payment form.
            </summary>
            <param name="paymentIdentifier">The payment identifier.</param>
            <returns></returns>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
        <member name="M:Ucommerce.Api.TransactionLibrary.RequestPayments">
            <summary>
            Requests the payments.
            </summary>
        </member>
        <member name="M:Ucommerce.Api.TransactionLibrary.RequestPayment(System.Int32)">
            <summary>
            Requests the payment.
            </summary>
            <param name="paymentId">The payment id.</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
    </members>
</doc>
